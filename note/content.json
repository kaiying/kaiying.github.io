{"meta":{"title":"Kathy :PPP","subtitle":"凱西 :PPP 小筆記","description":"凱西 :PPP 小筆記","author":"Kathy Lai(KaiYing)","url":"http://kaiying.github.io/note","root":"/note/"},"pages":[],"posts":[{"title":"","slug":"dev env/upgrade node via npm","date":"2022-11-17T07:48:40.698Z","updated":"2022-11-17T07:49:38.060Z","comments":true,"path":"2022/11/17/dev env/upgrade node via npm/","link":"","permalink":"http://kaiying.github.io/note/2022/11/17/dev%20env/upgrade%20node%20via%20npm/","excerpt":"","text":"Upgrade node via npm123npm cache clean -fnpm install -g nn stable","categories":[],"tags":[]},{"title":"","slug":"vue/Duplicate keys detected 0 This may cause an update error","date":"2021-12-28T07:38:02.265Z","updated":"2021-12-28T07:38:02.266Z","comments":true,"path":"2021/12/28/vue/Duplicate keys detected 0 This may cause an update error/","link":"","permalink":"http://kaiying.github.io/note/2021/12/28/vue/Duplicate%20keys%20detected%200%20This%20may%20cause%20an%20update%20error/","excerpt":"","text":"Duplicate keys detected: ‘0’. This may cause an update error.錯誤訊息12[Vue warn]: Duplicate keys detected: &#x27;0&#x27;. This may cause an update error.[Vue warn]: Duplicate keys detected: &#x27;1&#x27;. This may cause an update error. 錯誤原因 一個 template 有兩個相同 key 值的 v-for 。 錯誤訊息上的 0 和 1 就是兩個迴圈重複的 key 值。 錯誤範例12345&lt;template lang=&quot;pug&quot;&gt; .cart-step1.pt-4 item-row(v-for=&quot;(item, index) in items&quot; :key=&quot;`index`&quot; :item=&quot;item&quot;) gift-row(v-for=&quot;(gift, index) in gifts&quot; :key=&quot;`index`&quot; :gift=&quot;gift&quot;)&lt;/template&gt; 解決範例12345&lt;template lang=&quot;pug&quot;&gt; .cart-step1.pt-4 item-row(v-for=&quot;(item, index) in items&quot; :key=&quot;`product-$&#123;index&#125;`&quot; :item=&quot;item&quot;) gift-row(v-for=&quot;(gift, index) in gifts&quot; :key=&quot;`gift-$&#123;index&#125;`&quot; :gift=&quot;gift&quot;)&lt;/template&gt; 注意並不是變數名稱不能一樣，是變數的值不能相同。","categories":[],"tags":[]},{"title":"","slug":"vue/vue-test-utils/setMethods is deprecated and will be removed in the next major version. 2","date":"2021-11-22T03:27:13.587Z","updated":"2021-11-22T03:27:13.587Z","comments":true,"path":"2021/11/22/vue/vue-test-utils/setMethods is deprecated and will be removed in the next major version. 2/","link":"","permalink":"http://kaiying.github.io/note/2021/11/22/vue/vue-test-utils/setMethods%20is%20deprecated%20and%20will%20be%20removed%20in%20the%20next%20major%20version.%202/","excerpt":"","text":"setMethods is deprecated and will be removed in the next major version.description完整錯誤訊息： 1[vue-test-utils]: setMethods is deprecated and will be removed in the next major version. There is no clear migration path for setMethods - Vue does not support arbitrarily replacement of methods, nor should VTU. To stub a complex method extract it from the component and test it in isolation. Otherwise, the suggestion is to rethink those tests. 錯誤訊息：setMethods 將在下一個主要版本棄用。 網路上大多舉例都是在需要mock axios的情境，所以可以查到不少範例是針對 axios mock的部分。 1234567891011121314151617// Component.vueimport &#123; asyncAction &#125; from &#x27;actions&#x27;const Component = &#123; ..., methods: &#123; async someAsyncMethod() &#123; this.result = await asyncAction() &#125; &#125; &#125;// spec.jsimport &#123; asyncAction &#125; from &#x27;actions&#x27;jest.mock(&#x27;actions&#x27;)asyncAction.mockResolvedValue(&#123; foo: &#x27;bar&#x27; &#125;)// rest of your test (From rfcs) 但因為我的需求是針對流程控制，例如執行這個 method ，中間會跑 A 一次、B兩次 等等，所以這個解法完全幫不上忙。 按照官方網站建議的解法，改用 mount 時帶入 method： 12345mount(Foo, &#123; methods: &#123; getData: () =&gt; &#123;&#125; &#125;&#125;) 會出現另外一個錯誤訊息： [vue-test-utils]: overwriting methods via themethodsproperty is deprecated and will be removed in the next major version. 最後是在 github 爬到的一個解法，原理也是用覆蓋的：solution old1234567891011121314151617test(&#x27;description 變更觸發 watch，如期呼叫 renderTags() renderContent() 方法重捲頁面&#x27;, async () =&gt; &#123; /** arrange */ const renderTags = jest.fn(); const renderContent = jest.fn(); const wrapper = shallowMount(component); wrapper.setMethods(&#123; renderTags, renderContent &#125;); /** act */ wrapper.setProps(&#123; description: fakeDescription, &#125;); await wrapper.vm.$nextTick(); /** assert */ expect(renderTags).toBeCalled(); expect(renderContent).toBeCalled();&#125;); improving1234567891011121314151617181920test(&#x27;description 變更觸發 watch，如期呼叫 renderTags() renderContent() 方法重捲頁面&#x27;, async () =&gt; &#123; /** arrange */ const renderTags = jest.fn(); const renderContent = jest.fn(); const wrapper = shallowMount(component); // 改用新方式 wrapper.vm.renderTags = renderTags; wrapper.vm.renderContent = renderContent; /** act */ wrapper.setProps(&#123; description: fakeDescription, &#125;); await wrapper.vm.$nextTick(); /** assert */ expect(renderTags).toBeCalled(); expect(renderContent).toBeCalled();&#125;);","categories":[],"tags":[]},{"title":"","slug":"vue/vue-test-utils/mock plugin or global instance (`$xxx`) instance 2","date":"2021-11-22T03:27:13.586Z","updated":"2021-11-22T03:27:13.586Z","comments":true,"path":"2021/11/22/vue/vue-test-utils/mock plugin or global instance (`$xxx`) instance 2/","link":"","permalink":"http://kaiying.github.io/note/2021/11/22/vue/vue-test-utils/mock%20plugin%20or%20global%20instance%20(%60$xxx%60)%20instance%202/","excerpt":"","text":"mock plugin or global instance ($xxx) instanceauthordescription使用 i18n 、auth、route … 等 vue global 套件會出現的測試需求。 sample12345678910111213const wrapper = shallowMount(component, &#123; localVue, mocks: &#123; $auth: &#123; getToken: () =&gt; &#x27;token-stub&#x27;, &#125;, $route: &#123; params: &#123; id: &#x27;&#x27;, &#125;, &#125;, &#125;, &#125;);","categories":[],"tags":[]},{"title":"","slug":"vue/vue-test-utils/isVueInstance is deprecated and will be removed in the next major version. 2","date":"2021-11-22T03:27:13.586Z","updated":"2021-11-22T03:27:13.586Z","comments":true,"path":"2021/11/22/vue/vue-test-utils/isVueInstance is deprecated and will be removed in the next major version. 2/","link":"","permalink":"http://kaiying.github.io/note/2021/11/22/vue/vue-test-utils/isVueInstance%20is%20deprecated%20and%20will%20be%20removed%20in%20the%20next%20major%20version.%202/","excerpt":"","text":"isVueInstance is deprecated and will be removed in the next major version.description完整錯誤訊息： 1[vue-test-utils]: isVueInstance is deprecated and will be removed in the next major version. 錯誤訊息：isVueInstance 將在下一個主要版本棄用。 棄用原因：這個方法以長遠來看，並沒有存在的必要，用 findComponent 可以得到 vueWrapper ，這也代表他是 vue instance。 根據棄用原因，我試了這個方法，拿到 vueWrapper，然後就卡住了，我要怎麼辨別 vueWrapper？ typeof 的結果是 object ，也不可能生成一個一模一樣的內容來當測試結果。 官網文件的 update to V1 給了一個比較好的解法：wrapper.vm。 old1234567891011import &#123; mount &#125; from &#x27;@vue/test-utils&#x27;;// your test instanceimport grade from &#x27;@/components/product/grade.vue&#x27;;describe(&#x27;grade.vue&#x27;, () =&gt; &#123; test(&#x27;grade.vue is a Vue instance&#x27;, () =&gt; &#123; const wrapper = mount(grade); expect(wrapper.exists()).toBe(true); expect(wrapper.isVueInstance()).toBeTruthy(); &#125;);&#125;); improving1234567// import 的部分沒有變動（略過） test(&#x27;grade.vue is a Vue instance&#x27;, () =&gt; &#123; const wrapper = mount(grade); expect(wrapper.exists()).toBe(true); // 改用 vm expect(wrapper.vm).toBeTruthy();&#125;); documentvue-test-utils Upgrading to V1.0","categories":[],"tags":[]},{"title":"","slug":"vue/vue-test-utils/contains is deprecated and will be removed in the next major version. Use `wrapper.find`, `wrapper.findComponent` or `wrapper.get` instead 2","date":"2021-11-22T03:27:13.585Z","updated":"2021-11-22T03:27:13.586Z","comments":true,"path":"2021/11/22/vue/vue-test-utils/contains is deprecated and will be removed in the next major version. Use `wrapper.find`, `wrapper.findComponent` or `wrapper.get` instead 2/","link":"","permalink":"http://kaiying.github.io/note/2021/11/22/vue/vue-test-utils/contains%20is%20deprecated%20and%20will%20be%20removed%20in%20the%20next%20major%20version.%20Use%20%60wrapper.find%60,%20%60wrapper.findComponent%60%20or%20%60wrapper.get%60%20instead%202/","excerpt":"","text":"contains is deprecated and will be removed in the next major version.完整錯誤訊息： 1[vue-test-utils]: contains is deprecated and will be removed in the next major version. Use `wrapper.find`, `wrapper.findComponent` or `wrapper.get` instead. old12345678910test(&#x27;預設不顯示 header &amp; footer&#x27;, () =&gt; &#123; /** arrange */ // none /** act */ const wrapper = shallowMount(component); /** assert */ expect(wrapper.contains(&#x27;.modal-header&#x27;)).toBeFalsy(); expect(wrapper.contains(&#x27;.modal-footer&#x27;)).toBeFalsy();&#125;); improving12345678910test(&#x27;預設不顯示 header &amp; footer&#x27;, () =&gt; &#123; /** arrange */ // none /** act */ const wrapper = shallowMount(component); /** assert */ expect(wrapper.find(&#x27;.modal-header&#x27;).element).toBeFalsy(); expect(wrapper.find(&#x27;.modal-footer&#x27;).element).toBeFalsy();&#125;);","categories":[],"tags":[]},{"title":"","slug":"vue/vue3/emit events","date":"2021-11-22T03:27:13.487Z","updated":"2021-11-22T03:27:13.488Z","comments":true,"path":"2021/11/22/vue/vue3/emit events/","link":"","permalink":"http://kaiying.github.io/note/2021/11/22/vue/vue3/emit%20events/","excerpt":"","text":"[vue3] emit events 這份文件寫的是指客製化事件的發射。 一般事件仍然會正常觸發（例如 click），接收一樣以 @ 在 element 上接收。 setup stylesetup 的參數 context 可以取得 emit，再把它傳進函式中使用即可。 123const setup = function (props, context) &#123; // context 裡頭有 attrs, emit, expose, slots&#125; 1234567// 發射事件：目前正在選擇的項目const emitCurrentItem = (&#123; emit, list &#125;) =&gt; (index) =&gt; &#123; emit(&#x27;overItem&#x27;, &#123; index, text: list.value[index] || &#x27;&#x27;, &#125;);&#125;; referencevue3 official normal stylesame as v2 123456789101112const methods = &#123; emitCurrentItem() &#123; this.$emit(&#x27;overItem&#x27;, &#123; index, text: list.value[index] || &#x27;&#x27;, &#125;); &#125;&#125;export default &#123; name: &#x27;test&#x27;, methods,&#125;","categories":[],"tags":[]},{"title":"","slug":"vue/vue3/slot","date":"2021-05-10T06:41:44.408Z","updated":"2021-05-11T03:01:13.662Z","comments":true,"path":"2021/05/10/vue/vue3/slot/","link":"","permalink":"http://kaiying.github.io/note/2021/05/10/vue/vue3/slot/","excerpt":"","text":"[vue3] slotcreate slot template建立 template 方法和 V2 沒有區別～ 1234567891011.modal-mask .modal-wrapper .modal-container.container .header slot(name=&#x27;header&#x27;) .body slot(name=&#x27;body&#x27;) .footer slot(name=&#x27;footer&#x27;) button.default-button(type=&quot;button&quot;) | OK using123modal template(v-slot:body) h2 hello modal content","categories":[],"tags":[]},{"title":"","slug":"vue/vue3/element ref","date":"2021-04-20T09:06:43.233Z","updated":"2021-05-11T03:02:15.967Z","comments":true,"path":"2021/04/20/vue/vue3/element ref/","link":"","permalink":"http://kaiying.github.io/note/2021/04/20/vue/vue3/element%20ref/","excerpt":"","text":"[vue3]element ref*所有參數傳遞用 &#123;&#125; 包住，純粹是個人習慣，因為可以排開順序問題 * 這邊指的 ref 是 element 上的 ref 1button.btn.btn-secondary(ref=&quot;searchButton&quot;) submit normal style如果是用 v2 的寫法，沒有生命週期的順序問題，直接： 1this.$refs.searchButton.focus(); setup style123456789101112131415const mounted = (&#123; searchButton &#125;) =&gt; () =&gt; &#123; searchButton.value.focus();&#125;;const setup = function (props, context) &#123; // 對應 `template` 上的 `ref` const searchButton = ref(null); onMounted(mounted(&#123; searchButton &#125;)); return &#123; // ref searchButton, &#125;&#125; extract setup style ：composition api用注入的方式把 ref 丟進去即可。 範例： 將 focus button 抽出一個 method，供其他需要的 method 呼叫。 使用 composition api 時，注入參數。1234567const setup = function () &#123; const &#123; test &#125; = useAutoComplete(&#123; searchButton &#125;); return &#123; test, &#125;&#125; 使用參數 (in composition api)12345678const focusButton = (&#123; searchButton &#125;) =&gt; () =&gt; &#123; searchButton.value.focus();&#125;;export default function (&#123; searchButton &#125;) &#123; return &#123; focusButton: focusButton(&#123; searchButton &#125;), &#125;&#125;","categories":[],"tags":[]},{"title":"","slug":"vue/vue3/props","date":"2021-04-15T07:27:29.931Z","updated":"2021-05-10T06:42:25.343Z","comments":true,"path":"2021/04/15/vue/vue3/props/","link":"","permalink":"http://kaiying.github.io/note/2021/04/15/vue/vue3/props/","excerpt":"","text":"[vue3] vue3 props syntaxnormal (same as ver 2)123456789101112const props = &#123; list: &#123; type: Array, default: [] &#125;&#125;export default &#123; name: &#x27;test&#x27;, props,&#125;// 可直接在 template 使用 list in setup注意事項 However, because props are reactive, you cannot use ES6 destructuring because it will remove props reactivity. from (vue3 official)[https://v3.vuejs.org/guide/composition-api-setup.html#props] 使用 setup 的時候，不能使用 ES6 解構，會破壞 reactive 語法123456789101112131415161718192021222324252627// 先定義 props 的類型和預設值const props = &#123; list: &#123; type: Array, default: [], &#125;,&#125;;const items = (&#123; list &#125;) =&gt; computed(() =&gt; &#123; return map(x =&gt; `sample-$&#123;x&#125;` , list.value) &#125;);// setup 的時候取用const setup = function (props) &#123; const &#123; list &#125; = toRefs(props); return &#123; items: items(&#123; list &#125;), &#125;;&#125;;// vue instanceexport default &#123; name: &#x27;test&#x27;, props, setup,&#125;; in &lt;script setup&gt; defineProps() is a compiler-hint helper that is only usable inside of a single file component. 12345678 const props = defineProps(&#123; list: &#123; type: Array, default: [], &#125;, &#125;); const &#123; list &#125; = toRefs(props);// 即可直接使用 list","categories":[],"tags":[]},{"title":"","slug":"vue/vue3/mixin to composition api","date":"2021-04-14T07:10:12.361Z","updated":"2021-05-10T06:42:11.459Z","comments":true,"path":"2021/04/14/vue/vue3/mixin to composition api/","link":"","permalink":"http://kaiying.github.io/note/2021/04/14/vue/vue3/mixin%20to%20composition%20api/","excerpt":"","text":"[vue3]mixin to composition apicompare 1 : type (object &amp; function)mixin1234export default &#123; data, methods,&#125; composition api (setup)123export default function () &#123; // 對外可共用的項目&#125; compare 2 : using (import)mixin123export default &#123; mixins: [mixinName],&#125; composition api123456789import useAutoComplete from &#x27;@/src/mixins/auto-complete/use-auto-complete&#x27;;const setup = function () &#123; const &#123; hoverIndex, keyDown &#125; = useAutoComplete(); return &#123; hoverIndex, keyDown, &#125;;&#125;; compare 3 : Syntaxmixin12345678910111213141516import &#123; hoverDefaultIndex, arrowKeyEnum &#125; from &#x27;@/src/constant/search/auto-complete&#x27;;const data = function () &#123; return &#123; hoverIndex: hoverDefaultIndex, &#125;&#125;const methods = &#123; keyDown(event) &#123; if (event.key === arrowKeyEnum.down) this.hoverIndex += 1; if (event.key === arrowKeyEnum.up) this.hoverIndex -= 1; &#125;,&#125;export default &#123; data, methods,&#125; composition api123456789101112131415import &#123; ref &#125; from &#x27;vue&#x27;;import &#123; hoverDefaultIndex, arrowKeyEnum &#125; from &#x27;@/src/constant/search/auto-complete&#x27;;const keyDown = (&#123; hoverIndex &#125;) =&gt; (event) =&gt; &#123; if (event.key === arrowKeyEnum.down) hoverIndex.value += 1; if (event.key === arrowKeyEnum.up) hoverIndex.value -= 1;&#125;;export default function () &#123; const hoverIndex = ref(hoverDefaultIndex); return &#123; hoverIndex, keyDown: keyDown(&#123; hoverIndex &#125;), &#125;;&#125;","categories":[],"tags":[]},{"title":"","slug":"vue/vue-test-utils/mock plugin or global instance (`$xxx`) instance","date":"2020-12-15T08:29:50.293Z","updated":"2020-12-15T08:49:47.087Z","comments":true,"path":"2020/12/15/vue/vue-test-utils/mock plugin or global instance (`$xxx`) instance/","link":"","permalink":"http://kaiying.github.io/note/2020/12/15/vue/vue-test-utils/mock%20plugin%20or%20global%20instance%20(%60$xxx%60)%20instance/","excerpt":"","text":"mock plugin or global instance ($xxx) instanceauthordescription使用 i18n 、auth、route … 等 vue global 套件會出現的測試需求。 sample12345678910111213const wrapper = shallowMount(component, &#123; localVue, mocks: &#123; $auth: &#123; getToken: () =&gt; &#x27;token-stub&#x27;, &#125;, $route: &#123; params: &#123; id: &#x27;&#x27;, &#125;, &#125;, &#125;, &#125;);","categories":[],"tags":[]},{"title":"","slug":"vue/[vue] 五星評分元件 (using fontawsome)","date":"2020-12-11T02:50:13.701Z","updated":"2020-12-11T02:51:33.631Z","comments":true,"path":"2020/12/11/vue/[vue] 五星評分元件 (using fontawsome)/","link":"","permalink":"http://kaiying.github.io/note/2020/12/11/vue/[vue]%20%E4%BA%94%E6%98%9F%E8%A9%95%E5%88%86%E5%85%83%E4%BB%B6%20(using%20fontawsome)/","excerpt":"","text":"vue star grade (using fontawsome)123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960&lt;template lang=&quot;pug&quot;&gt; .grade(:style=&quot;&#123; fontSize: size + &#x27;rem&#x27; &#125;&quot;) span(v-for=&quot;(item, index) in 5&quot; :class=&quot;getStarClass(index)&quot;)&lt;/template&gt;&lt;script&gt;const props = &#123; score: &#123; type: Number, default: 0, &#125;, size: &#123; type: Number, default: 2, &#125;,&#125;;const data = function() &#123; return &#123; star: &#123; on: &#x27;icon-fa-star&#x27;, off: &#x27;far icon-fa-star&#x27;, half: &#x27;fa icon-fa-star-half-alt&#x27;, &#125;, &#125;;&#125;;const methods = &#123; getStarClass(index) &#123; // 轉數字 const decimal = Number(this.score); // 無條件捨去 const numbers = parseInt(this.score, 10); // 分數比index還大，代表實心。舉例：小於1.5分的整數星星都發亮 if (index &lt; numbers) return this.star.on; // 半顆星星：整數部份相同，實際數比整數大。 todo: 大於.5才亮半顆的話，可以把numbers+0.5再計算 if (index === numbers &amp;&amp; decimal &gt; numbers) return this.star.half; return this.star.off; &#125;,&#125;;export default &#123; name: &#x27;Grade&#x27;, props, data, methods,&#125;;&lt;/script&gt;&lt;style lang=&quot;scss&quot; scoped&gt;.grade &#123; color: #bb2d0f; span &#123; margin: 0 0.1rem 0 0.1rem; &#125;&#125;&lt;/style&gt;","categories":[],"tags":[]},{"title":"","slug":"javascript/[testing tool - jest]expect throw error","date":"2020-12-10T06:33:03.997Z","updated":"2020-12-10T09:49:05.190Z","comments":true,"path":"2020/12/10/javascript/[testing tool - jest]expect throw error/","link":"","permalink":"http://kaiying.github.io/note/2020/12/10/javascript/[testing%20tool%20-%20jest]expect%20throw%20error/","excerpt":"","text":"[testing tool - jest]expect throw error123456test(&quot;Test description&quot;, () =&gt; &#123; const t = () =&gt; &#123; throw new TypeError(); &#125;; expect(t).toThrow(TypeError);&#125;); 另一種概念123456789it(&#x27;should throw Error with message \\&#x27;UNKNOWN ERROR\\&#x27; when no parameters were passed&#x27;, () =&gt; &#123; try &#123; throwError(); // Fail test if above expression doesn&#x27;t throw anything. expect(true).toBe(false); &#125; catch (e) &#123; expect(e.message).toBe(&quot;UNKNOWN ERROR&quot;); &#125;&#125;);","categories":[],"tags":[]},{"title":"vue/vue-test-utils/contains is deprecated and will be removed in the next major version. Use `wrapper.find`, `wrapper.findComponent` or `wrapper.get` instead","slug":"vue/vue-test-utils/contains is deprecated and will be removed in the next major version. Use `wrapper.find`, `wrapper.findComponent` or `wrapper.get` instead","date":"2020-12-03T07:37:51.093Z","updated":"2020-12-03T07:47:13.684Z","comments":true,"path":"2020/12/03/vue/vue-test-utils/contains is deprecated and will be removed in the next major version. Use `wrapper.find`, `wrapper.findComponent` or `wrapper.get` instead/","link":"","permalink":"http://kaiying.github.io/note/2020/12/03/vue/vue-test-utils/contains%20is%20deprecated%20and%20will%20be%20removed%20in%20the%20next%20major%20version.%20Use%20%60wrapper.find%60,%20%60wrapper.findComponent%60%20or%20%60wrapper.get%60%20instead/","excerpt":"","text":"contains is deprecated and will be removed in the next major version.完整錯誤訊息： 1[vue-test-utils]: contains is deprecated and will be removed in the next major version. Use `wrapper.find`, `wrapper.findComponent` or `wrapper.get` instead. old12345678910test('預設不顯示 header &amp; footer', () =&gt; &#123; /** arrange */ // none /** act */ const wrapper = shallowMount(component); /** assert */ expect(wrapper.contains('.modal-header')).toBeFalsy(); expect(wrapper.contains('.modal-footer')).toBeFalsy();&#125;); improving12345678910test('預設不顯示 header &amp; footer', () =&gt; &#123; /** arrange */ // none /** act */ const wrapper = shallowMount(component); /** assert */ expect(wrapper.find('.modal-header').element).toBeFalsy(); expect(wrapper.find('.modal-footer').element).toBeFalsy();&#125;);","categories":[],"tags":[]},{"title":"vue/vue-test-utils/setMethods is deprecated and will be removed in the next major version.","slug":"vue/vue-test-utils/setMethods is deprecated and will be removed in the next major version.","date":"2020-12-03T03:53:05.766Z","updated":"2020-12-03T07:41:21.102Z","comments":true,"path":"2020/12/03/vue/vue-test-utils/setMethods is deprecated and will be removed in the next major version./","link":"","permalink":"http://kaiying.github.io/note/2020/12/03/vue/vue-test-utils/setMethods%20is%20deprecated%20and%20will%20be%20removed%20in%20the%20next%20major%20version./","excerpt":"","text":"setMethods is deprecated and will be removed in the next major version.description完整錯誤訊息： 1[vue-test-utils]: setMethods is deprecated and will be removed in the next major version. There is no clear migration path for setMethods - Vue does not support arbitrarily replacement of methods, nor should VTU. To stub a complex method extract it from the component and test it in isolation. Otherwise, the suggestion is to rethink those tests. 錯誤訊息：setMethods 將在下一個主要版本棄用。 網路上大多舉例都是在需要mock axios的情境，所以可以查到不少範例是針對 axios mock的部分。 1234567891011121314151617// Component.vueimport &#123; asyncAction &#125; from 'actions'const Component = &#123; ..., methods: &#123; async someAsyncMethod() &#123; this.result = await asyncAction() &#125; &#125; &#125;// spec.jsimport &#123; asyncAction &#125; from 'actions'jest.mock('actions')asyncAction.mockResolvedValue(&#123; foo: 'bar' &#125;)// rest of your test (From rfcs) 但因為我的需求是針對流程控制，例如執行這個 method ，中間會跑 A 一次、B兩次 等等，所以這個解法完全幫不上忙。 按照官方網站建議的解法，改用 mount 時帶入 method： 12345mount(Foo, &#123; methods: &#123; getData: () =&gt; &#123;&#125; &#125;&#125;) 會出現另外一個錯誤訊息： [vue-test-utils]: overwriting methods via themethodsproperty is deprecated and will be removed in the next major version. 最後是在 github 爬到的一個解法，原理也是用覆蓋的：solution old1234567891011121314151617test('description 變更觸發 watch，如期呼叫 renderTags() renderContent() 方法重捲頁面', async () =&gt; &#123; /** arrange */ const renderTags = jest.fn(); const renderContent = jest.fn(); const wrapper = shallowMount(component); wrapper.setMethods(&#123; renderTags, renderContent &#125;); /** act */ wrapper.setProps(&#123; description: fakeDescription, &#125;); await wrapper.vm.$nextTick(); /** assert */ expect(renderTags).toBeCalled(); expect(renderContent).toBeCalled();&#125;); improving1234567891011121314151617181920test('description 變更觸發 watch，如期呼叫 renderTags() renderContent() 方法重捲頁面', async () =&gt; &#123; /** arrange */ const renderTags = jest.fn(); const renderContent = jest.fn(); const wrapper = shallowMount(component); // 改用新方式 wrapper.vm.renderTags = renderTags; wrapper.vm.renderContent = renderContent; /** act */ wrapper.setProps(&#123; description: fakeDescription, &#125;); await wrapper.vm.$nextTick(); /** assert */ expect(renderTags).toBeCalled(); expect(renderContent).toBeCalled();&#125;);","categories":[],"tags":[]},{"title":"vue/vue-test-utils/isVueInstance is deprecated and will be removed in the next major version.","slug":"vue/vue-test-utils/isVueInstance is deprecated and will be removed in the next major version.","date":"2020-12-03T02:48:12.928Z","updated":"2020-12-03T07:41:37.793Z","comments":true,"path":"2020/12/03/vue/vue-test-utils/isVueInstance is deprecated and will be removed in the next major version./","link":"","permalink":"http://kaiying.github.io/note/2020/12/03/vue/vue-test-utils/isVueInstance%20is%20deprecated%20and%20will%20be%20removed%20in%20the%20next%20major%20version./","excerpt":"","text":"isVueInstance is deprecated and will be removed in the next major version.description完整錯誤訊息： 1[vue-test-utils]: isVueInstance is deprecated and will be removed in the next major version. 錯誤訊息：isVueInstance 將在下一個主要版本棄用。 棄用原因：這個方法以長遠來看，並沒有存在的必要，用 findComponent 可以得到 vueWrapper ，這也代表他是 vue instance。 根據棄用原因，我試了這個方法，拿到 vueWrapper，然後就卡住了，我要怎麼辨別 vueWrapper？ typeof 的結果是 object ，也不可能生成一個一模一樣的內容來當測試結果。 官網文件的 update to V1 給了一個比較好的解法：wrapper.vm。 old1234567891011import &#123; mount &#125; from '@vue/test-utils';// your test instanceimport grade from '@/components/product/grade.vue';describe('grade.vue', () =&gt; &#123; test('grade.vue is a Vue instance', () =&gt; &#123; const wrapper = mount(grade); expect(wrapper.exists()).toBe(true); expect(wrapper.isVueInstance()).toBeTruthy(); &#125;);&#125;); improving1234567// import 的部分沒有變動（略過） test('grade.vue is a Vue instance', () =&gt; &#123; const wrapper = mount(grade); expect(wrapper.exists()).toBe(true); // 改用 vm expect(wrapper.vm).toBeTruthy();&#125;); documentvue-test-utils Upgrading to V1.0","categories":[],"tags":[]},{"title":"webp note","slug":"webp note","date":"2020-11-13T07:55:19.324Z","updated":"2020-11-13T09:59:12.298Z","comments":true,"path":"2020/11/13/webp note/","link":"","permalink":"http://kaiying.github.io/note/2020/11/13/webp%20note/","excerpt":"","text":"Using webpway 1：將本地的圖片用 webpack 都轉成 webp，再用套件選擇性套入 用 imagemin-webp-webpack-plugin 將圖片全部轉成 webp 123456789101112131415161718import ImageminWebpWebpackPlugin from 'imagemin-webp-webpack-plugin'...plugins: [ ... new ImageminWebpWebpackPlugin(&#123; config: [ &#123; test: /\\.(jpe?g|png)/, options: &#123; quality: 75 &#125; &#125; ], overrideExtension: false &#125;)] 123456789101112131415161718192021222324252627282930313233Vue.use(VueLazyLoad, &#123; preLoad: 1.3, error: require('@/static/images/product-default@3x.png'), loading: require('@/static/images/loading.gif'), attempt: 1, filter: &#123; progressive(listener, options) &#123; return ; console.group('============== [lazy load] progressive =============='); console.log(listener); console.log(options); // 把temp的值赋给src // listener.src = $(listener.el).attr('temp'); console.groupEnd(); &#125;, webp(listener, options) &#123; console.group('============== [lazy load] webp =============='); console.log(listener); console.log(options); // 把temp的值赋给src // listener.src = $(listener.el).attr('temp'); console.groupEnd(); // if () // 1. 是否支持webp // 2. 考虑编译速度及热更新相关问题，DEV环境还是照旧 // 3. 如果是svg的话，照旧 // 4. 做一个防错误处理，是cdn的地址才走webp // if (options.supportWebp &amp;&amp; !__DEV__ &amp;&amp; !listener.src.endsWith('.svg') &amp;&amp; listener.src.startsWith(cdnSetting[__ENV__].publicPath)) &#123; // listener.src += '.webp'; // &#125; &#125;, &#125;,&#125;); article解說： https://medium.com/@mingjunlu/image-optimization-using-webp-72d5641213c9 範例 https://juejin.im/post/6856607599249326094","categories":[],"tags":[]},{"title":"javascript/change url (not reload page) ","slug":"javascript/change url (not reload page) ","date":"2020-11-04T03:51:04.059Z","updated":"2020-11-13T06:41:25.130Z","comments":true,"path":"2020/11/04/javascript/change url (not reload page) /","link":"","permalink":"http://kaiying.github.io/note/2020/11/04/javascript/change%20url%20(not%20reload%20page)%20/","excerpt":"","text":"change url 不換頁use case使用 ajax 搜尋時，不 refesh page，但要改動網址。 1export const setDisplayUrl = (url) =&gt; window.history.pushState(null, null, url); referencehttps://henry255164.gitbooks.io/coding/content/rewrite_url.html","categories":[],"tags":[]},{"title":"","slug":"css/font size 無法調得更低？","date":"2020-11-03T11:33:32.859Z","updated":"2021-01-25T09:30:03.695Z","comments":true,"path":"2020/11/03/css/font size 無法調得更低？/","link":"","permalink":"http://kaiying.github.io/note/2020/11/03/css/font%20size%20%E7%84%A1%E6%B3%95%E8%AA%BF%E5%BE%97%E6%9B%B4%E4%BD%8E%EF%BC%9F/","excerpt":"","text":"font-size 無法縮得更小？question在 chrome 上使用 font-size 會遇到字體無法縮小的問題。 ex. chrome font-size 小於 11下不去。 solution偏方：CSS3 1transform: scale(0.5) 這個方法可以在 chrome 上讓字更小，但要注意是否會影響「其他瀏覽器」的顯示。","categories":[],"tags":[]},{"title":"webpack/lodash","slug":"webpack/lodash","date":"2020-10-27T08:09:05.501Z","updated":"2020-10-27T08:10:33.341Z","comments":true,"path":"2020/10/27/webpack/lodash/","link":"","permalink":"http://kaiying.github.io/note/2020/10/27/webpack/lodash/","excerpt":"","text":"lodashhttps://www.npmjs.com/package/lodash-webpack-plugin 12lodash-webpack-plugin &#x2F;&#x2F;devlodash &#x2F;&#x2F; prd 1LodashWebpackPlugin 12","categories":[],"tags":[]},{"title":"javascript/eslint","slug":"javascript/eslint","date":"2020-10-27T03:23:29.024Z","updated":"2020-10-27T07:36:12.490Z","comments":true,"path":"2020/10/27/javascript/eslint/","link":"","permalink":"http://kaiying.github.io/note/2020/10/27/javascript/eslint/","excerpt":"","text":"eslintinstall commend1yarn add yarn eslint babel-eslint eslint-config-prettier eslint-plugin-prettier prettier eslint-config-airbnb-base eslint-plugin-import --dev","categories":[],"tags":[]},{"title":"webpack/different enviroment text using dotenv (webpack)","slug":"webpack/different enviroment text using dotenv (webpack)","date":"2020-10-27T02:58:26.229Z","updated":"2020-10-27T03:05:54.125Z","comments":true,"path":"2020/10/27/webpack/different enviroment text using dotenv (webpack)/","link":"","permalink":"http://kaiying.github.io/note/2020/10/27/webpack/different%20enviroment%20text%20using%20dotenv%20(webpack)/","excerpt":"","text":"different enviroment using dotenv (webpack)how to use ?inject env paramsUsing DefinePlugin in webpack.config.js 1234567const conifg = &#123; plugins: [ new webpack.DefinePlugin(&#123; ...webpackHelper.defineEnv(process.env) &#125;), ],&#125; webpackHelper.defineEnv 為我們自己寫的 helper 1234567891011const defineEnv = env =&gt; Object.keys(env).reduce((o, key) =&gt; &#123; const value = env[key]; o[`process.env.$&#123;key&#125;`] = ['boolean', 'number'].indexOf(typeof value) !== -1 ? value : JSON.stringify(value); return o;&#125;, &#123;&#125;);module.exports = &#123; defineEnv&#125; split env file1234567891011121314151617const fs = require('fs');const getCommonName = () =&gt; '.env';const getEnvName = env =&gt; (env === 'production' ? '.env.prd' : env === 'stg' ? '.env.stg' : env === 'lab' ? '.env.lab' : '.env.development');const getLocalEnvName = env =&gt; `$&#123;getEnvName(env)&#125;.local`;const processEnvFile = (env, action) =&gt; &#123; const files = [getLocalEnvName(env), getEnvName(env), getCommonName()]; files.forEach(file =&gt; &#123; if (!fs.existsSync(file)) return; action(file); &#125;);&#125;;module.exports = processEnvFile;","categories":[],"tags":[]},{"title":"","slug":"bootstrap/checkbox style","date":"2020-09-17T02:09:00.436Z","updated":"2021-01-25T09:48:06.071Z","comments":true,"path":"2020/09/17/bootstrap/checkbox style/","link":"","permalink":"http://kaiying.github.io/note/2020/09/17/bootstrap/checkbox%20style/","excerpt":"","text":"修改 bootstrap4 checkbox styleElement他的樣式是綁在 label 上，所以結構上必須長 123.custom-checkbox .custom-control-input .custom-control-label Styleno checked1234567.custom-control-label::before &#123; border-color: var(--e-light-gold); border-radius: 2px; // 調整大小 width: 18px; height: 18px; &#125; checked打勾勾的樣式（SVG)123.custom-checkbox .custom-control-input:checked ~ .custom-control-label::after &#123; background-image: url(data:image/svg+xml,%3csvg xmlns=&#x27;http://www.w3.org/2000/svg&#x27; width=&#x27;8&#x27; height=&#x27;8&#x27; viewBox=&#x27;0 0 8 8&#x27;%3e%3cpath fill=&#x27;%23fff&#x27; d=&#x27;M6.564.75l-3.59 3.612-1.538-1.55L0 4.26l2.974 2.99L8 2.193z&#x27;/%3e%3c/svg%3e);&#125; 大小、顏色12345678.custom-control-input:checked ~ .custom-control-label::before &#123; color: var(--e-light-gold); border-color: var(--e-light-gold); background-color: var(--e-light-gold); // 調整大小，通常會等同於未選擇的狀態 width: 18px; height: 18px; &#125;","categories":[],"tags":[]},{"title":"vue/vue timer","slug":"vue/vue timer","date":"2020-09-08T03:36:54.919Z","updated":"2020-09-09T02:47:39.341Z","comments":true,"path":"2020/09/08/vue/vue timer/","link":"","permalink":"http://kaiying.github.io/note/2020/09/08/vue/vue%20timer/","excerpt":"","text":"vue timer123456789101112131415161718192021222324252627282930313233const data = function() &#123; return &#123; timerInstance: null, timerSeconds: 30, timerCounting: 0, &#125;;&#125;;const methods = &#123; timerStart() &#123; this.timerCounting = this.timerSeconds; if (this.timerInstance == null) &#123; this.timerInstance = setInterval(this.timerHandler, 1000); &#125; &#125;, timerHandler() &#123; if (this.timerCounting === 0) &#123; this.timerEnd(); return; &#125; this.timerCounting -= 1; console.log('timer ==&gt;', this.timerCounting); &#125;, timerEnd() &#123; clearInterval(this.timerInstance); this.timerInstance = null; // 將狀態轉為空 this.timerCounting = this.timerSeconds; &#125;,&#125;;export default &#123; data, methods,&#125;;","categories":[],"tags":[]},{"title":"vue/image on error handle (vueJs)","slug":"vue/image on error handle (vueJs)","date":"2020-08-21T08:50:06.447Z","updated":"2020-08-21T08:50:40.569Z","comments":true,"path":"2020/08/21/vue/image on error handle (vueJs)/","link":"","permalink":"http://kaiying.github.io/note/2020/08/21/vue/image%20on%20error%20handle%20(vueJs)/","excerpt":"","text":"Referencehttps://www.jianshu.com/p/394c487d81d7","categories":[],"tags":[]},{"title":"vue/vue with debounce(lodash)","slug":"vue/vue with debounce(lodash)","date":"2020-08-18T03:41:41.994Z","updated":"2020-11-03T08:38:26.202Z","comments":true,"path":"2020/08/18/vue/vue with debounce(lodash)/","link":"","permalink":"http://kaiying.github.io/note/2020/08/18/vue/vue%20with%20debounce(lodash)/","excerpt":"","text":"debounce use case (vue)Case：BindingHtml(pug/jade)1input.quantity.pl-3.pl-lg-0(v-model&#x3D;&quot;itemQuantity&quot;) Js12345678910const computed = &#123; itemQuantity: &#123; get() &#123; return this.item.qty; &#125;, set: debounce(function(value) &#123; this.item.qty = value &lt;= 0 ? 1 : parseInt(value, 10); &#125;, 500), &#125;,&#125;; Case：Handle eventHtml (pug/jade)1button.add-cart-group.btn-eslite-red(v-if&#x3D;&quot;isEnabled&quot; @click&#x3D;&quot;action&quot;) Js123456const methods = &#123; action: debounce(function() &#123; if (this.product.status === productStatusEnum.selling) this.$emit('addCart', this.product.id); if (this.product.status === productStatusEnum.notices) this.$emit('notices', this.product.id); &#125;, 500),&#125; RefernceDebounce &amp; Throttle — 那些前端開發應該要知道的小事(一) Lodash - 使用debounce做事件延遲","categories":[],"tags":[]},{"title":"","slug":"javascript/debounce lodash","date":"2020-07-13T07:41:05.335Z","updated":"2021-01-25T09:46:11.014Z","comments":true,"path":"2020/07/13/javascript/debounce lodash/","link":"","permalink":"http://kaiying.github.io/note/2020/07/13/javascript/debounce%20lodash/","excerpt":"","text":"Lodash debounce (part of install)因為我自己的使用的專案已經有使用 ramda 了，所以只會需要 debounce 這個功能，為了不要太大包，只會載入 function 這個部分。 install npm or yarn install 1234567&#123; &quot;dependencies&quot;: &#123; &quot;babel-plugin-lodash&quot;: &quot;^3.3.4&quot;, &quot;lodash&quot;: &quot;^4.17.19&quot;, &quot;lodash-webpack-plugin&quot;: &quot;^0.11.5&quot;, &#125;&#125; Repack plugin install loadsh (function) 1234567import LodashWebpackPlugin from &#x27;lodash-webpack-plugin&#x27;;export default &#123; plugins: [ new LodashWebpackPlugin(&#123; function: true &#125;), ],&#125; using載入1import &#123; debounce &#125; from &#x27;lodash/function&#x27;; 使用 (sample of vue)12345const methods = &#123; confirm: debounce(function () &#123; this.$emit(&#x27;eventName&#x27;, this.params); &#125;, 1000),&#125; RefernceDebounce &amp; Throttle — 那些前端開發應該要知道的小事(一) Lodash - 使用debounce做事件延遲 GitHub: lodash-webpack-plugin","categories":[],"tags":[]},{"title":"","slug":"vue/UnitTest：nuxt-link","date":"2020-03-02T10:42:04.088Z","updated":"2020-12-15T03:06:58.598Z","comments":true,"path":"2020/03/02/vue/UnitTest：nuxt-link/","link":"","permalink":"http://kaiying.github.io/note/2020/03/02/vue/UnitTest%EF%BC%9Anuxt-link/","excerpt":"","text":"UnitTest：&lt;nuxt-link&gt; is not registeredenvironment nuxt : 2.0.0 jest : 24.1.0 @vue/test-utils : ^1.0.0-beta.27 Errornuxt-link 放在 template 中，在測試執行時會提醒沒有註冊 component。解決方法：弄假的把它略過。 Solution12345678import &#123; mount, RouterLinkStub &#125; from &#x27;@vue/test-utils&#x27;const wrapper = await shallowMount(component, &#123; ..., stubs: &#123; NuxtLink: RouterLinkStub, &#125;, &#125;);expect(wrapper.find(RouterLinkStub).props().to).toBe(&#x27;/some/path&#x27;)","categories":[],"tags":[]},{"title":"vue/Props with type ObjectArray must use a factory function to return the default value","slug":"vue/Props with type ObjectArray must use a factory function to return the default value","date":"2020-02-25T07:14:16.203Z","updated":"2020-11-03T09:39:19.641Z","comments":true,"path":"2020/02/25/vue/Props with type ObjectArray must use a factory function to return the default value/","link":"","permalink":"http://kaiying.github.io/note/2020/02/25/vue/Props%20with%20type%20ObjectArray%20must%20use%20a%20factory%20function%20to%20return%20the%20default%20value/","excerpt":"","text":"[Vue warn] : Props with type Object/Array must use a factory function to return the default value.Error123456const props = &#123; description: &#123; type: Array, default:[], &#125;,&#125;; Solution123456const props = &#123; description: &#123; type: Array, default:() =&gt; [], &#125;,&#125;;","categories":[],"tags":[]},{"title":"Hello World","slug":"readme","date":"2020-01-02T01:12:03.956Z","updated":"2020-01-04T16:34:35.217Z","comments":true,"path":"2020/01/02/readme/","link":"","permalink":"http://kaiying.github.io/note/2020/01/02/readme/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}